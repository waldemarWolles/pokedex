{"version":3,"sources":["api/pokemons-api.js","redux/pokemons-reducer.js","helpers/colors.js","components/CardItem.jsx","components/Cards.jsx","components/PopUp.jsx","components/Pokemons.jsx","components/Header.jsx","components/InfoCard.jsx","App.js","redux/redux-store.js","index.js"],"names":["pokemonsAPI","getPokemons","limit","offset","a","axios","get","response","requestsArray","data","results","map","request","name","all","responseAll","getTypes","SET_POKEMONS","SET_ACTIVE_POKEMON","SET_ACTIVE_POKEMON_CLEAR","SET_ALL_TYPES","SET_ACTIVE_TYPE","SET_POKEMONS_IN_PROGRESS","initialState","cards","isChosenPokemon","activePokemon","allTypes","activeType","isInProgress","pokemonsReducer","state","action","type","pokemons","find","element","types","setPokemons","setActiveType","setPokemonsInProgress","getPokemonCards","dispatch","getState","pokemon","colorsHandler","HUE","useStyles","makeStyles","theme","card","height","display","flexDirection","padding","spacing","backgroundColor","gray","cardMedia","paddingTop","marginBottom","breakpoints","down","maxWidth","cardContent","flexGrow","cardTypes","justifyContent","border","borderRadius","cardGrid","paddingBottom","cardContainer","marginTop","CardItem","id","classes","useDispatch","console","log","Grid","item","xs","sm","md","lg","CardActionArea","onClick","e","setActivePokemon","Card","className","CardMedia","image","title","CardContent","Typography","align","gutterBottom","variant","component","capitalize","index","style","Cards","useSelector","filter","length","root","paper","marginRight","MenuListComposition","useState","open","setOpen","anchorRef","useRef","handleClose","event","current","contains","target","handleActiveType","currentTarget","outerText","toLowerCase","prevOpen","React","useEffect","focus","Button","ref","aria-controls","undefined","aria-haspopup","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","MenuItem","cardActions","margin","button","width","div","position","zIndex","Pokemons","memo","Fragment","Container","container","color","disabled","appBar","text","Header","AppBar","Toolbar","noWrap","grid","alignItems","cardTitle","textAlign","fontWeight","table","tabletd","divTable","divTableRight","divTableLeft","borderRight","divLeftEl","borderBottom","divRightEl","InfoCard","elevation","square","order","stats","stat","base_stat","weight","header","overflow","App","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8515e8b.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const pokemonsAPI = {\r\n  getPokemons: async (limit, offset) => {\r\n    const response = await axios.get(\r\n      `https://pokeapi.co/api/v2/pokemon/?limit=${limit}&offset=${offset}`\r\n    )\r\n    const requestsArray = response.data.results.map(async (request) => {\r\n      return axios.get(`https://pokeapi.co/api/v2/pokemon/${request.name}`)\r\n    })\r\n    const responseAll = await axios.all(requestsArray)\r\n    return responseAll\r\n  },\r\n\r\n  getTypes: async () => {\r\n    const response = await axios.get(`https://pokeapi.co/api/v2/type?limit=999`)\r\n    return response.data\r\n  },\r\n}\r\n","import { pokemonsAPI } from '../api/pokemons-api'\r\nconst SET_POKEMONS = 'pokemons-reducer/setPokemons'\r\nconst SET_ACTIVE_POKEMON = 'pokemons-reducer/setActivePokemon'\r\nconst SET_ACTIVE_POKEMON_CLEAR = 'pokemons-reducer/setActivePokemonClear'\r\nconst SET_ALL_TYPES = 'pokemons-reducer/setAllTypes'\r\nconst SET_ACTIVE_TYPE = 'pokemons-reducer/setActiveType'\r\nconst SET_POKEMONS_IN_PROGRESS = 'pokemons-reducer/setPokemonsInProgress'\r\n\r\nlet initialState = {\r\n  cards: [],\r\n  offset: 0,\r\n  limit: 12,\r\n  isChosenPokemon: false,\r\n  activePokemon: {},\r\n  allTypes: [],\r\n  activeType: null,\r\n  isInProgress: false,\r\n}\r\n\r\nconst pokemonsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_POKEMONS: {\r\n      return {\r\n        ...state,\r\n        cards: [...state.cards, ...action.pokemons],\r\n        offset: action.offset + action.limit,\r\n      }\r\n    }\r\n\r\n    case SET_ACTIVE_POKEMON: {\r\n      return {\r\n        ...state,\r\n        activePokemon: {\r\n          ...state.cards.find((element) => element.name === action.name),\r\n        },\r\n        isChosenPokemon: true,\r\n      }\r\n    }\r\n\r\n    case SET_ACTIVE_POKEMON_CLEAR: {\r\n      return {\r\n        ...state,\r\n        activePokemon: {},\r\n        isChosenPokemon: false,\r\n      }\r\n    }\r\n\r\n    case SET_ALL_TYPES: {\r\n      return {\r\n        ...state,\r\n        allTypes: [...action.types],\r\n      }\r\n    }\r\n\r\n    case SET_ACTIVE_TYPE: {\r\n      return {\r\n        ...state,\r\n        activeType: action.activeType,\r\n      }\r\n    }\r\n\r\n    case SET_POKEMONS_IN_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        isInProgress: action.isInProgress,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default pokemonsReducer\r\n\r\nexport const setPokemons = (pokemons, limit, offset) => ({\r\n  type: SET_POKEMONS,\r\n  pokemons,\r\n  limit,\r\n  offset,\r\n})\r\n\r\nexport const setActivePokemon = (name) => ({\r\n  type: SET_ACTIVE_POKEMON,\r\n  name,\r\n})\r\n\r\nexport const setActivePokemonClear = () => ({\r\n  type: SET_ACTIVE_POKEMON_CLEAR,\r\n})\r\n\r\nexport const setAllTypes = (types) => ({\r\n  type: SET_ALL_TYPES,\r\n  types,\r\n})\r\n\r\nexport const setActiveType = (activeType) => ({\r\n  type: SET_ACTIVE_TYPE,\r\n  activeType,\r\n})\r\n\r\nexport const setPokemonsInProgress = (isInProgress) => ({\r\n  type: SET_POKEMONS_IN_PROGRESS,\r\n  isInProgress,\r\n})\r\n\r\nexport const getPokemonCards = (limit, offset) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(setPokemonsInProgress(true))\r\n    let response = await pokemonsAPI.getPokemons(limit, offset)\r\n\r\n    let pokemons = response.map((pokemon) => pokemon.data)\r\n\r\n    dispatch(setPokemons(pokemons, limit, offset))\r\n    dispatch(setPokemonsInProgress(false))\r\n  }\r\n}\r\n\r\nexport const getAllTypes = () => {\r\n  return async (dispatch, getState) => {\r\n    let response = await pokemonsAPI.getTypes()\r\n\r\n    dispatch(setAllTypes(response.results))\r\n  }\r\n}\r\n","import * as HUE from '@material-ui/core/colors'\r\n\r\nexport const colorsHandler = (type) => {\r\n  switch (type) {\r\n    case 'normal':\r\n      return HUE.blue[100]\r\n    case 'fighting':\r\n      return HUE.red[900]\r\n    case 'flying':\r\n      return HUE.blue[300]\r\n    case 'poison':\r\n      return HUE.green[900]\r\n    case 'ground':\r\n      return HUE.brown[400]\r\n    case 'rock':\r\n      return HUE.grey[500]\r\n    case 'bug':\r\n      return HUE.lightGreen[600]\r\n    case 'ghost':\r\n      return HUE.grey[200]\r\n    case 'steel':\r\n      return HUE.blueGrey[500]\r\n    case 'fire':\r\n      return HUE.orange[700]\r\n    case 'water':\r\n      return HUE.lightBlue[600]\r\n    case 'grass':\r\n      return HUE.green[500]\r\n    case 'electric':\r\n      return HUE.yellow[500]\r\n    case 'psychic':\r\n      return HUE.lime[200]\r\n    case 'ice':\r\n      return HUE.blue[50]\r\n    case 'dragon':\r\n      return HUE.orange[500]\r\n    case 'dark':\r\n      return HUE.indigo[400]\r\n    case 'fairy':\r\n      return HUE.pink[300]\r\n    case 'unknown':\r\n      return HUE.purple[200]\r\n    case 'shadow':\r\n      return HUE.deepPurple[400]\r\n\r\n    default:\r\n      break\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { capitalize, CardActionArea } from '@material-ui/core'\r\nimport { colorsHandler } from '../helpers/colors'\r\nimport gray from '@material-ui/core/colors/grey'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setActivePokemon } from '../redux/pokemons-reducer'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: theme.spacing(1),\r\n    backgroundColor: gray[100],\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '100%', // 16:9\r\n    marginBottom: theme.spacing(1),\r\n    [theme.breakpoints.down('sm')]: {\r\n      maxWidth: theme.spacing(100),\r\n    },\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  cardTypes: {\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  type: {\r\n    border: '1px solid green',\r\n    borderRadius: '5px',\r\n    padding: '5px 19px',\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  cardContainer: {\r\n    marginBottom: theme.spacing(8),\r\n    marginTop: theme.spacing(8),\r\n  },\r\n}))\r\n\r\nexport const CardItem = ({ id, name, types }) => {\r\n  const classes = useStyles()\r\n\r\n  const dispatch = useDispatch()\r\n  const choosePokemon = (e) => {\r\n    dispatch(setActivePokemon(name))\r\n  }\r\n\r\n  console.log('render')\r\n\r\n  return (\r\n    <>\r\n      <Grid item={true} xs={12} sm={6} md={6} lg={4}>\r\n        <CardActionArea onClick={choosePokemon}>\r\n          <Card className={classes.card}>\r\n            <CardMedia\r\n              className={classes.cardMedia}\r\n              image={` https://pokeres.bastionbot.org/images/pokemon/${id}.png`}\r\n              title={name}\r\n            />\r\n            <CardContent className={classes.cardContent}>\r\n              <Typography\r\n                align=\"center\"\r\n                gutterBottom={true}\r\n                variant=\"h5\"\r\n                component=\"h2\"\r\n              >\r\n                {capitalize(name)}\r\n              </Typography>\r\n              {/* {cardTypes.length >= cards.length && ( */}\r\n              <Typography className={classes.cardTypes}>\r\n                {types.map((type, index) => {\r\n                  return (\r\n                    <span\r\n                      key={`${index + type.type.name}`}\r\n                      className={classes.type}\r\n                      style={{\r\n                        backgroundColor: `${colorsHandler(type.type.name)}`,\r\n                      }}\r\n                    >\r\n                      {capitalize(type.type.name)}\r\n                    </span>\r\n                  )\r\n                })}\r\n              </Typography>\r\n              {/* )} */}\r\n            </CardContent>\r\n          </Card>\r\n        </CardActionArea>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { CardItem } from './CardItem'\r\n\r\nexport const Cards = () => {\r\n  const { cards, activeType } = useSelector((state) => state.pokemons)\r\n\r\n  return (\r\n    <>\r\n      {cards\r\n        .filter((card) => {\r\n          if (activeType === null) {\r\n            return true\r\n          } else if (card.types.length > 1) {\r\n            if (\r\n              card.types[0].type.name === activeType ||\r\n              card.types[1].type.name === activeType\r\n            ) {\r\n              return true\r\n            }\r\n          } else if (card.types.length === 1) {\r\n            if (card.types[0].type.name === activeType) {\r\n              return true\r\n            }\r\n          }\r\n          return false\r\n        })\r\n        .map((card, index) => (\r\n          <CardItem\r\n            key={`${card.name + index}`}\r\n            id={card.id}\r\n            name={card.name}\r\n            types={card.types}\r\n          />\r\n        ))}\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\r\nimport Grow from '@material-ui/core/Grow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Popper from '@material-ui/core/Popper'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport MenuList from '@material-ui/core/MenuList'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setActiveType } from './../redux/pokemons-reducer'\r\nimport { capitalize } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}))\r\n\r\nexport default function MenuListComposition() {\r\n  const classes = useStyles()\r\n  const [open, setOpen] = useState(false)\r\n  const anchorRef = useRef(null)\r\n  const dispatch = useDispatch()\r\n  const { activeType, allTypes } = useSelector((state) => state.pokemons)\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen)\r\n  }\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return\r\n    }\r\n\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleActiveType = (event) => {\r\n    if (event.currentTarget.outerText === 'All') {\r\n      dispatch(setActiveType(null))\r\n    } else {\r\n      dispatch(setActiveType(event.currentTarget.outerText.toLowerCase()))\r\n    }\r\n\r\n    setOpen(false)\r\n  }\r\n\r\n  // function handleListKeyDown(event) {\r\n  //   if (event.key === 'Tab') {\r\n  //     event.preventDefault()\r\n  //     setOpen(false)\r\n  //   }\r\n  // }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open)\r\n  useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus()\r\n    }\r\n\r\n    prevOpen.current = open\r\n  }, [open])\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <Button\r\n          ref={anchorRef}\r\n          aria-controls={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggle}\r\n        >\r\n          Sort Pokemons by Type : {activeType ? activeType : 'All'}\r\n        </Button>\r\n        <Popper\r\n          open={open}\r\n          anchorEl={anchorRef.current}\r\n          role={undefined}\r\n          transition={true}\r\n          disablePortal={true}\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === 'bottom' ? 'center top' : 'center bottom',\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList\r\n                    autoFocusItem={open}\r\n                    id=\"menu-list-grow\"\r\n                    // onKeyDown={handleListKeyDown}\r\n                  >\r\n                    <MenuItem onClick={handleActiveType}>All</MenuItem>\r\n                    <MenuItem onClick={handleActiveType}>\r\n                      {capitalize(allTypes[0].name)}\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleActiveType}>\r\n                      {capitalize(allTypes[1].name)}\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleActiveType}>\r\n                      {capitalize(allTypes[2].name)}\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleActiveType}>\r\n                      {capitalize(allTypes[3].name)}\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleActiveType}>\r\n                      {capitalize(allTypes[4].name)}\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleActiveType}>\r\n                      {capitalize(allTypes[5].name)}\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleActiveType}>\r\n                      {capitalize(allTypes[6].name)}\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleActiveType}>\r\n                      {capitalize(allTypes[7].name)}\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleActiveType}>\r\n                      {capitalize(allTypes[8].name)}\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleActiveType}>\r\n                      {capitalize(allTypes[9].name)}\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleActiveType}>\r\n                      {capitalize(allTypes[10].name)}\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleActiveType}>\r\n                      {capitalize(allTypes[11].name)}\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleActiveType}>\r\n                      {capitalize(allTypes[12].name)}\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleActiveType}>\r\n                      {capitalize(allTypes[13].name)}\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleActiveType}>\r\n                      {capitalize(allTypes[14].name)}\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleActiveType}>\r\n                      {capitalize(allTypes[15].name)}\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleActiveType}>\r\n                      {capitalize(allTypes[16].name)}\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleActiveType}>\r\n                      {capitalize(allTypes[17].name)}\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleActiveType}>\r\n                      {capitalize(allTypes[18].name)}\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleActiveType}>\r\n                      {capitalize(allTypes[19].name)}\r\n                    </MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getAllTypes,\r\n  getPokemonCards,\r\n  setActivePokemonClear,\r\n} from '../redux/pokemons-reducer'\r\nimport { Cards } from './Cards'\r\nimport MenuListComposition from './PopUp'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardGrid: {\r\n    paddingBottom: theme.spacing(8),\r\n    maxWidth: 'md',\r\n  },\r\n  cardContainer: {\r\n    marginBottom: theme.spacing(8),\r\n    marginTop: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: theme.spacing(1),\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '70%', // 16:9\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  cardActions: {\r\n    margin: '0 auto',\r\n  },\r\n  button: {\r\n    width: '100%',\r\n  },\r\n  div: {\r\n    position: 'relative',\r\n    zIndex: 3,\r\n    paddingTop: '100px',\r\n  },\r\n}))\r\n\r\nexport const Pokemons = React.memo(() => {\r\n  const classes = useStyles()\r\n\r\n  const { limit, offset, isInProgress } = useSelector((state) => state.pokemons)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onAddCards = () => {\r\n    dispatch(getPokemonCards(limit, offset))\r\n    dispatch(setActivePokemonClear())\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getPokemonCards(limit, offset))\r\n    dispatch(getAllTypes())\r\n  }, [])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} sm={12} md={6}>\r\n        <div className={classes.div}>\r\n          <MenuListComposition />\r\n        </div>\r\n        <Container className={classes.cardGrid}>\r\n          <Grid className={classes.cardContainer} container={true} spacing={4}>\r\n            <Cards />\r\n          </Grid>\r\n          <Button\r\n            onClick={onAddCards}\r\n            className={classes.button}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={isInProgress}\r\n          >\r\n            Load more\r\n          </Button>\r\n        </Container>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n})\r\n","import { AppBar, makeStyles, Toolbar, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'fixed',\r\n    zIndex: 2,\r\n  },\r\n  text: {\r\n    margin: '0 auto',\r\n  },\r\n}))\r\n\r\nexport const Header = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <>\r\n      <AppBar className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography\r\n            className={classes.text}\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap={true}\r\n          >\r\n            Pokedex\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { capitalize } from '@material-ui/core'\r\nimport { Card } from '@material-ui/core'\r\nimport { CardMedia } from '@material-ui/core'\r\nimport { CardContent } from '@material-ui/core'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grid: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.down('xs')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  paper: {\r\n    position: 'fixed',\r\n    height: '100%',\r\n\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n\r\n  cardContainer: {\r\n    marginBottom: theme.spacing(8),\r\n    marginTop: theme.spacing(8),\r\n  },\r\n  card: {\r\n    maxWidth: 'md',\r\n\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    padding: theme.spacing(1),\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      maxWidth: '400px',\r\n    },\r\n  },\r\n  cardTitle: {\r\n    textAlign: 'center',\r\n    fontWeight: 700,\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '100%', // 16:9\r\n    marginBottom: theme.spacing(1),\r\n    width: '100%',\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n  table: {\r\n    maxWidth: '100%',\r\n    textAlign: 'center',\r\n  },\r\n\r\n  tabletd: {\r\n    width: '100%',\r\n    padding: theme.spacing(1, 5),\r\n    border: '1px solid black',\r\n  },\r\n  divTable: {\r\n    display: 'flex',\r\n    width: '400px',\r\n    textAlign: 'center',\r\n    justifyContent: 'space-between',\r\n    [theme.breakpoints.down('md')]: {\r\n      width: '300px',\r\n    },\r\n  },\r\n  divTableRight: {\r\n    width: '30%',\r\n    border: '1px solid black',\r\n  },\r\n  divTableLeft: {\r\n    width: '70%',\r\n    border: '1px solid black',\r\n    borderRight: 'none',\r\n  },\r\n  divLeftEl: {\r\n    borderBottom: '1px solid black',\r\n    '&:last-child': {\r\n      borderBottom: 'none',\r\n    },\r\n  },\r\n  divRightEl: {\r\n    borderBottom: '1px solid black',\r\n    '&:last-child': {\r\n      borderBottom: 'none',\r\n    },\r\n  },\r\n}))\r\n\r\nexport const InfoCard = () => {\r\n  const classes = useStyles()\r\n  debugger\r\n  const { isChosenPokemon, activePokemon } = useSelector(\r\n    (state) => state.pokemons\r\n  )\r\n  debugger\r\n  return (\r\n    <>\r\n      <Grid\r\n        className={classes.grid}\r\n        item\r\n        xs={false}\r\n        sm={false}\r\n        md={6}\r\n        elevation={6}\r\n        square=\"true\"\r\n      >\r\n        <div className={classes.paper}>\r\n          {isChosenPokemon && (\r\n            <Card className={classes.card}>\r\n              <CardMedia\r\n                className={classes.cardMedia}\r\n                image={`https://pokeres.bastionbot.org/images/pokemon/${activePokemon.id}.png`}\r\n              />\r\n              <CardContent className={classes.cardContent}>\r\n                <Typography\r\n                  className={classes.cardTitle}\r\n                  gutterBottom={true}\r\n                  variant=\"h5\"\r\n                  component=\"h2\"\r\n                >\r\n                  <span>\r\n                    {capitalize(activePokemon.name)} #{activePokemon.order}\r\n                  </span>\r\n                </Typography>\r\n                <div className={classes.divTable}>\r\n                  <div className={classes.divTableLeft}>\r\n                    <div className={classes.divLeftEl}>\r\n                      {capitalize('Type')}\r\n                    </div>\r\n\r\n                    <div className={classes.divLeftEl}>\r\n                      {capitalize(activePokemon.stats[1].stat.name)}\r\n                    </div>\r\n                    <div className={classes.divLeftEl}>\r\n                      {capitalize(activePokemon.stats[2].stat.name)}\r\n                    </div>\r\n                    <div className={classes.divLeftEl}>\r\n                      {capitalize(activePokemon.stats[0].stat.name)}\r\n                    </div>\r\n                    <div className={classes.divLeftEl}>\r\n                      {capitalize(activePokemon.stats[3].stat.name)}\r\n                    </div>\r\n                    <div className={classes.divLeftEl}>\r\n                      {capitalize(activePokemon.stats[4].stat.name)}\r\n                    </div>\r\n\r\n                    <div className={classes.divLeftEl}>\r\n                      {capitalize(activePokemon.stats[5].stat.name)}\r\n                    </div>\r\n                    <div className={classes.divLeftEl}>\r\n                      {capitalize('weight')}\r\n                    </div>\r\n                  </div>\r\n                  <div className={classes.divTableRight}>\r\n                    <div className={classes.divRightEl}>\r\n                      <span>\r\n                        {capitalize(activePokemon.types[0].type.name)}\r\n                      </span>\r\n                    </div>\r\n                    <div className={classes.divRightEl}>\r\n                      {activePokemon.stats[1].base_stat}\r\n                    </div>\r\n                    <div className={classes.divRightEl}>\r\n                      {activePokemon.stats[2].base_stat}\r\n                    </div>\r\n                    <div className={classes.divRightEl}>\r\n                      {activePokemon.stats[0].base_stat}\r\n                    </div>\r\n                    <div className={classes.divRightEl}>\r\n                      {activePokemon.stats[3].base_stat}\r\n                    </div>\r\n                    <div className={classes.divRightEl}>\r\n                      {activePokemon.stats[4].base_stat}\r\n                    </div>\r\n\r\n                    <div className={classes.divRightEl}>\r\n                      {activePokemon.stats[5].base_stat}\r\n                    </div>\r\n                    <div className={classes.divRightEl}>\r\n                      {activePokemon.weight}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n          {!isChosenPokemon && (\r\n            <Card className={classes.card}>\r\n              <CardMedia\r\n                className={classes.cardMedia}\r\n                image=\"https://media.giphy.com/media/uWLJEGCSWdmvK/giphy.gif\"\r\n              />\r\n              <CardContent className={classes.cardContent}>\r\n                <Typography\r\n                  className={classes.cardTitle}\r\n                  gutterBottom={true}\r\n                  variant=\"h5\"\r\n                  component=\"h2\"\r\n                >\r\n                  <span>Choose Your Pokemon</span>\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n        </div>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n","import './App.css'\nimport { Pokemons } from './components/Pokemons'\nimport { Header } from './components/Header'\nimport React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { InfoCard } from './components/InfoCard'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  header: {\n    overflow: 'hidden',\n  },\n}))\n\nfunction App() {\n  const classes = useStyles()\n\n  return (\n    <>\n      <Header />\n\n      <Grid container={true} component=\"main\" className={classes.root}>\n        <Pokemons />\n\n        <InfoCard />\n      </Grid>\n    </>\n  )\n}\n\nexport default App\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux'\r\nimport pokemonsReducer from './pokemons-reducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nlet rootReducer = combineReducers({\r\n  pokemons: pokemonsReducer,\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n)\r\n\r\nexport default store\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './redux/redux-store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}